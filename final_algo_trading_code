//@version=5
indicator("Switch Strategy with Master Levels (Optimized)", overlay=true)

// --- User Inputs ---
show_levels = input.int(title="Number of Levels to Show (Original)", defval=8, options=[4, 5, 8, 9], tooltip="Select 4, 5, 8, or 9 original levels to display.")
display_mode = input.string(title="Display Mode", defval="Toggle", options=["Toggle", "Both"], tooltip="Choose to toggle between level types or display both.")
level_type = input.string(title="Level Type", defval="Original", options=["Original", "Master"], tooltip="Choose between Original and Master key levels (only applies in Toggle mode).")
maxMasterLines = input.int(defval=5, title="Max Master Lines to Display", minval=1, maxval=55, tooltip="Choose how many master lines to keep on the chart")


// --- Candle Color Checks ---
isGreen = close > open
isRed = close < open

// --- Original Key Level Variables ---
var float lastBullishKey = na
var float lastBearishKey = na
var color lastBullishColor = na
var color lastBearishColor = na
var int lastBullishBar = na
var int lastBearishBar = na

// Arrays to store the last 9 bullish and bearish keys (Original) - Increased size to 9
var float[] bullishKeys = array.new_float(9, na)
var color[] bullishColors = array.new_color(9, na)
var int[] bullishBars = array.new_int(9, na)
var bool[] bullishTargets = array.new_bool(9, false)

var float[] bearishKeys = array.new_float(9, na)
var color[] bearishColors = array.new_color(9, na)
var int[] bearishBars = array.new_int(9, na)
var bool[] bearishTargets = array.new_bool(9, false)

//Arrays to delete lines and labels (Original)
var line[] bullishLines = array.new_line()
var line[] bearishLines = array.new_line()
var label[] bullishLabels = array.new_label()
var label[] bearishLabels = array.new_label()

// --- Master Key Level Variables ---
var line[] masterKeyLines = array.new<line>()
var label[] masterKeyLabels = array.new_label() // Array to store master key labels
var bool[] masterKeyTargets = array.new_bool(maxMasterLines, false)  // Track if a master key is a target
var int masterKeyCount = 0
var float lastMasterKeyLevel = na // Store the *last* master key level

// --- Functions ---

// Function to delete lines and labels (for both Original and Master)
deleteLinesAndLabels(line[] linesArray, label[] labelsArray) =>
    if array.size(linesArray) > 0
        for i = 0 to array.size(linesArray) - 1
            line.delete(array.get(linesArray, i))
        array.clear(linesArray)
    if array.size(labelsArray) > 0
        for i = 0 to array.size(labelsArray) - 1
            label.delete(array.get(labelsArray, i))
        array.clear(labelsArray)

// --- Alert Variables ---
var bool triggerBullishAlert = false
var bool triggerBearishAlert = false
var bool triggerMasterBullishAlert = false
var bool triggerMasterBearishAlert = false
var string alertMessage = ""

// --- Main Logic ---
if barstate.isconfirmed

    // Reset alert triggers each bar
    triggerBullishAlert := false
    triggerBearishAlert := false
    triggerMasterBullishAlert := false
    triggerMasterBearishAlert := false
    alertMessage := ""

    // --- Original Key Level Logic ---
    // Declare prior... variables
    var float priorBullishKey = na
    var float priorBearishKey = na
    var color priorBullishColor = na
    var color priorBearishColor = na
    var int priorBullishBar = na
    var int priorBearishBar = na

    bullishSwitch = isGreen and isRed[1]
    bearishSwitch = isRed and isGreen[1]

    if bullishSwitch
        keyLevel = isRed[2] ? high[2] : low[2]
        lineColor = isRed[2] ? color.red : color.green

        // Adjusted loop for 9 levels
        for i = 8 to 1
            bullishKeys.set(i, bullishKeys.get(i-1))
            bullishColors.set(i, bullishColors.get(i-1))
            bullishBars.set(i, bullishBars.get(i-1))
            bullishTargets.set(i, bullishTargets.get(i-1))

        bullishKeys.set(0, keyLevel)
        bullishColors.set(0, lineColor)
        bullishBars.set(0, bar_index[2])
        bullishTargets.set(0, false)

        if not na(bullishKeys.get(1))
            bullishTargets.set(1, true)

        if not na(lastBearishKey)
            priorBearishKey := lastBearishKey
            priorBearishColor := lastBearishColor
            priorBearishBar := lastBearishBar

        lastBullishKey := keyLevel

    if bearishSwitch
        keyLevel = isRed[2] ? high[2] : low[2]
        lineColor = isRed[2] ? color.red : color.green

        // Adjusted loop for 9 levels
        for i = 8 to 1
            bearishKeys.set(i, bearishKeys.get(i-1))
            bearishColors.set(i, bearishColors.get(i-1))
            bearishBars.set(i, bearishBars.get(i-1))
            bearishTargets.set(i, bearishTargets.get(i-1))

        bearishKeys.set(0, keyLevel)
        bearishColors.set(0, lineColor)
        bearishBars.set(0, bar_index[2])
        bearishTargets.set(0, false)

        if not na(bearishKeys.get(1))
            bearishTargets.set(1, true)

        if not na(lastBullishKey)
            priorBullishKey := lastBullishKey
            priorBullishColor := lastBullishColor
            priorBullishBar := lastBullishBar

        lastBearishKey := keyLevel

    // --- Master Key Level Logic ---
    // Master Key Level Switch Detection
    masterBullishSwitch = isGreen and isRed[1] and (close > high[1])
    masterBearishSwitch = isRed and isGreen[1] and (close < low[1])

    // Master Key Level Calculation
    n2CandleHigh = high[2]
    n2CandleLow = low[2]
    n2CandleIsRed = isRed[2]
    masterKeyLevel = n2CandleIsRed ? n2CandleHigh : n2CandleLow
    masterKeyColor = n2CandleIsRed ? color.red : color.green

    if masterBullishSwitch or masterBearishSwitch
            // Manage the number of master key lines
        if array.size(masterKeyLines) >= maxMasterLines
            line.delete(array.shift(masterKeyLines))
            label.delete(array.shift(masterKeyLabels)) // Delete the oldest label too
            if masterKeyCount > 0
                masterKeyCount := masterKeyCount- 1

        // Create and store the new master key line (BOLD)
        newMasterLine = line.new(bar_index - 2, masterKeyLevel, bar_index, masterKeyLevel, color=masterKeyColor, extend = extend.right, width=2)
        array.push(masterKeyLines, newMasterLine)

            // Determine if this is a target level
        isTarget = masterKeyCount > 0
            // Create and store the new master key label (M Target, White Text)
        labelText = isTarget ? "M Target (" + str.tostring(masterKeyLevel, "#.#####") + ")" : "(" + str.tostring(masterKeyLevel, "#.#####") + ")"
        newMasterLabel = label.new(bar_index, masterKeyLevel, labelText, color=color.new(color.black, 50), textcolor= isTarget ? color.white : masterKeyColor, style=label.style_label_left, size=size.normal) // Changed textcolor here
        array.push(masterKeyLabels, newMasterLabel)
        masterKeyCount := masterKeyCount + 1
        lastMasterKeyLevel := masterKeyLevel // Update lastMasterKeyLevel


    // --- Plotting (Conditional based on display_mode) ---
    if display_mode == "Toggle"
        // Delete old lines and labels
        deleteLinesAndLabels(bullishLines, bullishLabels)
        deleteLinesAndLabels(bearishLines, bearishLabels)
        deleteLinesAndLabels(masterKeyLines, masterKeyLabels)

        if level_type == "Original"
            // Plot Original Key Levels
            numLevelsToPlot = show_levels == 5 or show_levels == 9 ? show_levels / 2 + 1 : show_levels / 2
            for i = 0 to numLevelsToPlot - 1
                if not na(bullishKeys.get(i))
                    this_bullish_line = line.new(bullishBars.get(i), bullishKeys.get(i), bar_index, bullishKeys.get(i), color=bullishColors.get(i), extend=extend.right)
                    array.push(bullishLines, this_bullish_line)
                    labelTextBullish = bullishTargets.get(i) ? "Target (" + str.tostring(bullishKeys.get(i), "#.#####") + ")" : "(" + str.tostring(bullishKeys.get(i), "#.#####") + ")"
                    this_bullish_label = label.new(bar_index, bullishKeys.get(i), labelTextBullish, color=color.new(color.black, 50), textcolor=bullishColors.get(i), style=label.style_label_left, size=size.normal)
                    array.push(bullishLabels, this_bullish_label)

                if not na(bearishKeys.get(i))
                    this_bearish_line = line.new(bearishBars.get(i), bearishKeys.get(i), bar_index, bearishKeys.get(i), color=bearishColors.get(i), extend=extend.right)
                    array.push(bearishLines, this_bearish_line)
                    labelTextBearish = bearishTargets.get(i) ? "Target (" + str.tostring(bearishKeys.get(i), "#.#####") + ")" : "(" + str.tostring(bearishKeys.get(i), "#.#####") + ")"
                    this_bearish_label = label.new(bar_index, bearishKeys.get(i),  labelTextBearish, color=color.new(color.black, 50), textcolor=bearishColors.get(i), style=label.style_label_left, size=size.normal)
                    array.push(bearishLabels, this_bearish_label)


        else if level_type == "Master"
            // Plot Master Key Levels
            if array.size(masterKeyLines) > 0  // Check if the array is not empty
                for i = 0 to array.size(masterKeyLines) - 1
                    line.set_x2(masterKeyLines.get(i), bar_index)


    else if display_mode == "Both"
        // Delete ONLY the lines/labels that are about to be redrawn for ORIGINAL levels
        deleteLinesAndLabels(bullishLines, bullishLabels)
        deleteLinesAndLabels(bearishLines, bearishLabels)

        // Plot Original Key Levels
        numLevelsToPlot = show_levels == 5 or show_levels == 9 ? show_levels / 2 + 1 : show_levels / 2
        for i = 0 to numLevelsToPlot - 1
            if not na(bullishKeys.get(i))
                this_bullish_line = line.new(bullishBars.get(i), bullishKeys.get(i), bar_index, bullishKeys.get(i), color=bullishColors.get(i), extend=extend.right)
                array.push(bullishLines, this_bullish_line)
                labelTextBullish = bullishTargets.get(i) ? "Target (" + str.tostring(bullishKeys.get(i), "#.#####") + ")" : "(" + str.tostring(bullishKeys.get(i), "#.#####") + ")"
                this_bullish_label = label.new(bar_index, bullishKeys.get(i), labelTextBullish, color=color.new(color.black, 50), textcolor=bullishColors.get(i), style=label.style_label_left, size=size.normal)
                array.push(bullishLabels, this_bullish_label)

            if not na(bearishKeys.get(i))
                this_bearish_line = line.new(bearishBars.get(i), bearishKeys.get(i), bar_index, bearishKeys.get(i), color=bearishColors.get(i), extend=extend.right)
                array.push(bearishLines, this_bearish_line)
                labelTextBearish = bearishTargets.get(i) ? "Target (" + str.tostring(bearishKeys.get(i), "#.#####") + ")" : "(" + str.tostring(bearishKeys.get(i), "#.#####") + ")"
                this_bearish_label = label.new(bar_index, bearishKeys.get(i),  labelTextBearish, color=color.new(color.black, 50), textcolor=bearishColors.get(i), style=label.style_label_left, size=size.normal)
                array.push(bearishLabels, this_bearish_label)

        // Plot Master Key Levels (always, in "Both" mode) and extend
        if array.size(masterKeyLines) > 0  // Check if the array is not empty
            for i = 0 to array.size(masterKeyLines) - 1
                line.set_x2(masterKeyLines.get(i), bar_index)



    // --- Entry Conditions and Alert Triggers (based on active level type) ---
    bullishEntry = (display_mode == "Toggle" and level_type == "Original") ? ta.valuewhen(barstate.isconfirmed, close > lastBullishKey, 0) : (display_mode == "Both" ? ta.valuewhen(barstate.isconfirmed, close > lastBullishKey, 0) : false)
    bearishEntry = (display_mode == "Toggle" and level_type == "Original") ? ta.valuewhen(barstate.isconfirmed, close < lastBearishKey, 0) :  (display_mode == "Both" ? ta.valuewhen(barstate.isconfirmed, close < lastBearishKey, 0) : false)

    // Use lastMasterKeyLevel for master entry conditions
    masterBullishEntry = (display_mode == "Toggle" and level_type == "Master") ? ta.valuewhen(barstate.isconfirmed, close > lastMasterKeyLevel, 0) : (display_mode == "Both" ? ta.valuewhen(barstate.isconfirmed, close> lastMasterKeyLevel, 0) : false)
    masterBearishEntry = (display_mode == "Toggle" and level_type == "Master") ? ta.valuewhen(barstate.isconfirmed, close < lastMasterKeyLevel, 0) : (display_mode == "Both" ? ta.valuewhen(barstate.isconfirmed, close < lastMasterKeyLevel, 0) : false)

    // Set alert triggers based on entry conditions
    if bullishEntry
        triggerBullishAlert := true
        alertMessage := alertMessage + "Bullish Entry (Original): Break Key Level\n"
    if bearishEntry
        triggerBearishAlert := true
        alertMessage := alertMessage + "Bearish Entry (Original): Break Key Level\n"
    if masterBullishEntry
        triggerMasterBullishAlert := true
        alertMessage := alertMessage + "Bullish Entry (Master): Break Key Level\n"
    if masterBearishEntry
        triggerMasterBearishAlert := true
        alertMessage := alertMessage + "Bearish Entry (Master): Break Key Level\n"


// --- Alerts (Outside the if barstate.isconfirmed block) ---
if triggerBullishAlert or triggerBearishAlert or triggerMasterBullishAlert or triggerMasterBearishAlert
    alert(alertMessage, alert.freq_once_per_bar_close)
